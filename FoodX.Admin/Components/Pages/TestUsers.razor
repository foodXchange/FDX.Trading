@page "/test-users"
@using FoodX.Admin.Data
@using FoodX.Admin.Models
@using Microsoft.EntityFrameworkCore
@inject FoodXDbContext DbContext
@rendermode InteractiveServer

<PageTitle>Test Users</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
    <MudText Typo="Typo.h3" Class="mb-4">Test Users in Database</MudText>

    @if (isLoading)
    {
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
    }
    else if (errorMessage != null)
    {
        <MudAlert Severity="Severity.Error">@errorMessage</MudAlert>
    }
    else
    {
        <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
            <MudTabPanel Text="@($"Buyers ({buyers.Count})")">
                <MudSimpleTable Hover="true" Striped="true" Bordered="true">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Department</th>
                            <th>Company ID</th>
                            <th>Created</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var buyer in buyers)
                        {
                            <tr>
                                <td>@buyer.Id</td>
                                <td>@buyer.User.FullName</td>
                                <td>@buyer.User.Email</td>
                                <td>@buyer.Department</td>
                                <td>@buyer.CompanyId</td>
                                <td>@buyer.CreatedAt.ToString("yyyy-MM-dd")</td>
                            </tr>
                        }
                    </tbody>
                </MudSimpleTable>
            </MudTabPanel>

            <MudTabPanel Text="@($"Suppliers ({suppliers.Count})")">
                <MudSimpleTable Hover="true" Striped="true" Bordered="true">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Supplier Type</th>
                            <th>Company ID</th>
                            <th>Created</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var supplier in suppliers)
                        {
                            <tr>
                                <td>@supplier.Id</td>
                                <td>@supplier.User.FullName</td>
                                <td>@supplier.User.Email</td>
                                <td>@supplier.SupplierType</td>
                                <td>@supplier.CompanyId</td>
                                <td>@supplier.CreatedAt.ToString("yyyy-MM-dd")</td>
                            </tr>
                        }
                    </tbody>
                </MudSimpleTable>
            </MudTabPanel>

            <MudTabPanel Text="@($"Experts ({experts.Count})")">
                <MudSimpleTable Hover="true" Striped="true" Bordered="true">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Specialization</th>
                            <th>Certification</th>
                            <th>Created</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var expert in experts)
                        {
                            <tr>
                                <td>@expert.Id</td>
                                <td>@expert.User.FullName</td>
                                <td>@expert.User.Email</td>
                                <td>@expert.Specialization</td>
                                <td>@expert.CertificationNumber</td>
                                <td>@expert.CreatedAt.ToString("yyyy-MM-dd")</td>
                            </tr>
                        }
                    </tbody>
                </MudSimpleTable>
            </MudTabPanel>

            <MudTabPanel Text="@($"Agents ({agents.Count})")">
                <MudSimpleTable Hover="true" Striped="true" Bordered="true">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Agency</th>
                            <th>Territory</th>
                            <th>Created</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var agent in agents)
                        {
                            <tr>
                                <td>@agent.Id</td>
                                <td>@agent.User.FullName</td>
                                <td>@agent.User.Email</td>
                                <td>@agent.AgencyName</td>
                                <td>@agent.TerritoryRegion</td>
                                <td>@agent.CreatedAt.ToString("yyyy-MM-dd")</td>
                            </tr>
                        }
                    </tbody>
                </MudSimpleTable>
            </MudTabPanel>

            <MudTabPanel Text="@($"System Admins ({systemAdmins.Count})")">
                <MudSimpleTable Hover="true" Striped="true" Bordered="true">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Access Level</th>
                            <th>Department</th>
                            <th>Created</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var admin in systemAdmins)
                        {
                            <tr>
                                <td>@admin.Id</td>
                                <td>@admin.User.FullName</td>
                                <td>@admin.User.Email</td>
                                <td>@admin.AccessLevel</td>
                                <td>@admin.Department</td>
                                <td>@admin.CreatedAt.ToString("yyyy-MM-dd")</td>
                            </tr>
                        }
                    </tbody>
                </MudSimpleTable>
            </MudTabPanel>

            <MudTabPanel Text="@($"Back Office ({backOffices.Count})")">
                <MudSimpleTable Hover="true" Striped="true" Bordered="true">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Department</th>
                            <th>Shift</th>
                            <th>Created</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var bo in backOffices)
                        {
                            <tr>
                                <td>@bo.Id</td>
                                <td>@bo.User.FullName</td>
                                <td>@bo.User.Email</td>
                                <td>@bo.Department</td>
                                <td>@bo.ShiftTiming</td>
                                <td>@bo.CreatedAt.ToString("yyyy-MM-dd")</td>
                            </tr>
                        }
                    </tbody>
                </MudSimpleTable>
            </MudTabPanel>
        </MudTabs>

        <MudPaper Class="pa-4 mt-4">
            <MudText Typo="Typo.h6" Class="mb-2">Summary</MudText>
            <MudGrid>
                <MudItem xs="12" sm="6" md="4">
                    <MudText><strong>Total Users:</strong> @totalUsers</MudText>
                </MudItem>
                <MudItem xs="12" sm="6" md="4">
                    <MudText><strong>Buyers:</strong> @buyers.Count</MudText>
                </MudItem>
                <MudItem xs="12" sm="6" md="4">
                    <MudText><strong>Suppliers:</strong> @suppliers.Count</MudText>
                </MudItem>
                <MudItem xs="12" sm="6" md="4">
                    <MudText><strong>Experts:</strong> @experts.Count</MudText>
                </MudItem>
                <MudItem xs="12" sm="6" md="4">
                    <MudText><strong>Agents:</strong> @agents.Count</MudText>
                </MudItem>
                <MudItem xs="12" sm="6" md="4">
                    <MudText><strong>System Admins:</strong> @systemAdmins.Count</MudText>
                </MudItem>
                <MudItem xs="12" sm="6" md="4">
                    <MudText><strong>Back Office:</strong> @backOffices.Count</MudText>
                </MudItem>
            </MudGrid>
        </MudPaper>
    }
</MudContainer>

@code {
    private bool isLoading = true;
    private string? errorMessage = null;
    private int totalUsers = 0;

    private List<Buyer> buyers = new();
    private List<Supplier> suppliers = new();
    private List<Expert> experts = new();
    private List<Agent> agents = new();
    private List<SystemAdmin> systemAdmins = new();
    private List<BackOffice> backOffices = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Load all role-specific users with their related User data
            buyers = await DbContext.Buyers.Include(b => b.User).ToListAsync();
            suppliers = await DbContext.Suppliers.Include(s => s.User).ToListAsync();
            experts = await DbContext.Experts.Include(e => e.User).ToListAsync();
            agents = await DbContext.Agents.Include(a => a.User).ToListAsync();
            systemAdmins = await DbContext.SystemAdmins.Include(sa => sa.User).ToListAsync();
            backOffices = await DbContext.BackOffices.Include(bo => bo.User).ToListAsync();

            totalUsers = await DbContext.FoodXUsers.CountAsync();

            isLoading = false;
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading data: {ex.Message}";
            isLoading = false;
        }
    }
}