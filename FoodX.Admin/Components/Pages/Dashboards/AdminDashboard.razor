@page "/dashboard/admin"
@using FoodX.Admin.Data
@using FoodX.Admin.Models
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Authorization
@inject FoodXDbContext DbContext
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Admin,SuperAdmin")]

<PageTitle>Admin Dashboard - FoodX</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
    <MudGrid>
        <MudItem xs="12">
            <MudText Typo="Typo.h3" GutterBottom="true">
                <MudIcon Icon="@Icons.Material.Filled.AdminPanelSettings" Class="mr-2" Style="vertical-align: middle;" />
                Admin Dashboard
            </MudText>
            <MudText Typo="Typo.body1" Class="mb-4">Complete system overview and management</MudText>
        </MudItem>

        <!-- Key Metrics -->
        <MudItem xs="12" sm="6" md="3">
            <MudCard>
                <MudCardContent>
                    <MudIcon Icon="@Icons.Material.Filled.Business" Color="Color.Primary" Style="font-size: 3rem;" />
                    <MudText Typo="Typo.h4" Class="mt-2">@_companyCount</MudText>
                    <MudText Typo="Typo.body2" Color="Color.Secondary">Total Companies</MudText>
                    <MudText Typo="Typo.caption" Color="@(_newCompaniesThisWeek > 0 ? Color.Success : Color.Default)">
                        +@_newCompaniesThisWeek this week
                    </MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudCard>
                <MudCardContent>
                    <MudIcon Icon="@Icons.Material.Filled.People" Color="Color.Success" Style="font-size: 3rem;" />
                    <MudText Typo="Typo.h4" Class="mt-2">@_userCount</MudText>
                    <MudText Typo="Typo.body2" Color="Color.Secondary">Total Users</MudText>
                    <MudText Typo="Typo.caption" Color="@(_activeUsersToday > 0 ? Color.Success : Color.Default)">
                        @_activeUsersToday active today
                    </MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudCard>
                <MudCardContent>
                    <MudIcon Icon="@Icons.Material.Filled.Category" Color="Color.Warning" Style="font-size: 3rem;" />
                    <MudText Typo="Typo.h4" Class="mt-2">@_productCount</MudText>
                    <MudText Typo="Typo.body2" Color="Color.Secondary">Listed Products</MudText>
                    <MudText Typo="Typo.caption">@_activeProductCount active</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudCard>
                <MudCardContent>
                    <MudIcon Icon="@Icons.Material.Filled.Mail" Color="Color.Info" Style="font-size: 3rem;" />
                    <MudText Typo="Typo.h4" Class="mt-2">@_pendingInvitations</MudText>
                    <MudText Typo="Typo.body2" Color="Color.Secondary">Pending Invitations</MudText>
                    <MudText Typo="Typo.caption">@_invitationsSentToday sent today</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <!-- User Role Distribution -->
        <MudItem xs="12" md="6">
            <MudPaper Class="pa-4">
                <MudText Typo="Typo.h5" GutterBottom="true">User Role Distribution</MudText>
                <MudList T="string">
                    <MudListItem T="string" Icon="@Icons.Material.Filled.ShoppingCart">
                        <div class="d-flex justify-space-between align-center">
                            <MudText>Buyers</MudText>
                            <MudChip T="string" Color="Color.Primary" Size="Size.Small">@_buyerCount</MudChip>
                        </div>
                    </MudListItem>
                    <MudListItem T="string" Icon="@Icons.Material.Filled.LocalShipping">
                        <div class="d-flex justify-space-between align-center">
                            <MudText>Suppliers</MudText>
                            <MudChip T="string" Color="Color.Secondary" Size="Size.Small">@_supplierCount</MudChip>
                        </div>
                    </MudListItem>
                    <MudListItem T="string" Icon="@Icons.Material.Filled.School">
                        <div class="d-flex justify-space-between align-center">
                            <MudText>Experts</MudText>
                            <MudChip T="string" Color="Color.Success" Size="Size.Small">@_expertCount</MudChip>
                        </div>
                    </MudListItem>
                    <MudListItem T="string" Icon="@Icons.Material.Filled.Support">
                        <div class="d-flex justify-space-between align-center">
                            <MudText>Agents</MudText>
                            <MudChip T="string" Color="Color.Warning" Size="Size.Small">@_agentCount</MudChip>
                        </div>
                    </MudListItem>
                </MudList>
            </MudPaper>
        </MudItem>

        <!-- Quick Actions -->
        <MudItem xs="12" md="6">
            <MudPaper Class="pa-4">
                <MudText Typo="Typo.h5" GutterBottom="true">Quick Actions</MudText>
                <MudGrid Class="mt-3">
                    <MudItem xs="12" sm="6">
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.PersonAdd" 
                                   FullWidth="true" Href="/invitations/create">
                            Send Invitation
                        </MudButton>
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudButton Variant="Variant.Filled" Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Business" 
                                   FullWidth="true" Href="/companies">
                            Manage Companies
                        </MudButton>
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudButton Variant="Variant.Filled" Color="Color.Success" StartIcon="@Icons.Material.Filled.People" 
                                   FullWidth="true" Href="/users">
                            Manage Users
                        </MudButton>
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudButton Variant="Variant.Filled" Color="Color.Warning" StartIcon="@Icons.Material.Filled.Category" 
                                   FullWidth="true" Href="/products">
                            Manage Products
                        </MudButton>
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudButton Variant="Variant.Outlined" Color="Color.Info" StartIcon="@Icons.Material.Filled.Analytics" 
                                   FullWidth="true" Href="/reports">
                            View Reports
                        </MudButton>
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudButton Variant="Variant.Outlined" Color="Color.Default" StartIcon="@Icons.Material.Filled.Settings" 
                                   FullWidth="true" Href="/settings">
                            System Settings
                        </MudButton>
                    </MudItem>
                </MudGrid>
            </MudPaper>
        </MudItem>

        <!-- Recent Activity -->
        <MudItem xs="12">
            <MudPaper Class="pa-4 mt-4">
                <MudText Typo="Typo.h5" GutterBottom="true">Recent Activity</MudText>
                @if (_recentCompanies.Any())
                {
                    <MudTable Items="_recentCompanies" Hover="true" Breakpoint="Breakpoint.Sm">
                        <HeaderContent>
                            <MudTh>Company</MudTh>
                            <MudTh>Type</MudTh>
                            <MudTh>Country</MudTh>
                            <MudTh>Status</MudTh>
                            <MudTh>Created</MudTh>
                            <MudTh>Actions</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Company">@context.Name</MudTd>
                            <MudTd DataLabel="Type">@context.CompanyType</MudTd>
                            <MudTd DataLabel="Country">@context.Country</MudTd>
                            <MudTd DataLabel="Status">
                                <MudChip T="string" Color="@(context.IsActive ? Color.Success : Color.Default)" Size="Size.Small">
                                    @(context.IsActive ? "Active" : "Inactive")
                                </MudChip>
                            </MudTd>
                            <MudTd DataLabel="Created">@context.CreatedAt.ToString("MMM dd, yyyy")</MudTd>
                            <MudTd DataLabel="Actions">
                                <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Primary" Size="Size.Small" />
                                <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" Size="Size.Small" />
                            </MudTd>
                        </RowTemplate>
                    </MudTable>
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Secondary">No recent activity</MudText>
                }
            </MudPaper>
        </MudItem>

        <!-- System Health -->
        <MudItem xs="12">
            <MudPaper Class="pa-4 mt-4">
                <MudText Typo="Typo.h5" GutterBottom="true">System Health</MudText>
                <MudGrid>
                    <MudItem xs="12" sm="4">
                        <MudAlert Severity="Severity.Success" Icon="@Icons.Material.Filled.CheckCircle">
                            Database: Connected
                        </MudAlert>
                    </MudItem>
                    <MudItem xs="12" sm="4">
                        <MudAlert Severity="Severity.Success" Icon="@Icons.Material.Filled.CheckCircle">
                            Authentication: Active
                        </MudAlert>
                    </MudItem>
                    <MudItem xs="12" sm="4">
                        <MudAlert Severity="Severity.Success" Icon="@Icons.Material.Filled.CheckCircle">
                            Email Service: Configured
                        </MudAlert>
                    </MudItem>
                </MudGrid>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private int _companyCount = 0;
    private int _userCount = 0;
    private int _productCount = 0;
    private int _supplierCount = 0;
    private int _buyerCount = 0;
    private int _expertCount = 0;
    private int _agentCount = 0;
    private int _pendingInvitations = 0;
    private int _newCompaniesThisWeek = 0;
    private int _activeUsersToday = 0;
    private int _activeProductCount = 0;
    private int _invitationsSentToday = 0;
    private List<Company> _recentCompanies = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Get statistics from database
            _companyCount = await DbContext.Companies.CountAsync();
            _userCount = await DbContext.FoodXUsers.CountAsync();
            _productCount = await DbContext.Products.CountAsync();
            _activeProductCount = await DbContext.Products.Where(p => p.IsActive).CountAsync();
            
            // Count by role
            _supplierCount = await DbContext.Suppliers.CountAsync();
            _buyerCount = await DbContext.Buyers.CountAsync();
            _expertCount = await DbContext.Experts.CountAsync();
            _agentCount = await DbContext.Agents.CountAsync();

            // Get companies created this week
            var weekAgo = DateTime.UtcNow.AddDays(-7);
            _newCompaniesThisWeek = await DbContext.Companies
                .Where(c => c.CreatedAt >= weekAgo)
                .CountAsync();

            // Get active users today (would need LastLoginAt tracking)
            var today = DateTime.UtcNow.Date;
            _activeUsersToday = await DbContext.FoodXUsers
                .Where(u => u.LastLoginAt != null && u.LastLoginAt >= today)
                .CountAsync();

            // Get pending invitations
            _pendingInvitations = await DbContext.Invitations
                .Where(i => !i.IsUsed && !i.IsRevoked && i.ExpiresAt > DateTime.UtcNow)
                .CountAsync();

            // Get invitations sent today
            _invitationsSentToday = await DbContext.Invitations
                .Where(i => i.CreatedAt >= today)
                .CountAsync();

            // Get recent companies
            _recentCompanies = await DbContext.Companies
                .OrderByDescending(c => c.CreatedAt)
                .Take(10)
                .ToListAsync();
        }
        catch (Exception ex)
        {
            // If database is not accessible, use default values
            Console.WriteLine($"Database error: {ex.Message}");
        }
    }
}