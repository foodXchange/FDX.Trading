@page "/user-details"
@page "/user-details/{userId:int}"
@using Microsoft.AspNetCore.Authorization
@using FoodX.Admin.Data
@using FoodX.Admin.Models
@using Microsoft.EntityFrameworkCore
@inject FoodXDbContext DbContext
@attribute [Authorize]
@rendermode InteractiveServer

<PageTitle>User Details</PageTitle>

<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-4">
    @if (isLoading)
    {
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
    }
    else if (user != null)
    {
        <MudGrid>
            <MudItem xs="12">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderAvatar>
                            <MudAvatar Color="Color.Primary" Size="Size.Large">
                                @user.FirstName.Substring(0, 1)@user.LastName.Substring(0, 1)
                            </MudAvatar>
                        </CardHeaderAvatar>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h4">@user.FullName</MudText>
                            <MudText Typo="Typo.body1">@user.Email</MudText>
                            <MudChip T="string" Color="@GetRoleColor(user.Role)" Size="Size.Small" Class="mt-2">
                                @user.Role
                            </MudChip>
                            <MudChip T="string" Color="@(user.IsActive ? Color.Success : Color.Error)" Size="Size.Small">
                                @(user.IsActive ? "Active" : "Inactive")
                            </MudChip>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            @if (!isEditing)
                            {
                                <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Primary" OnClick="EnableEdit" />
                            }
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudTabs Elevation="0" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
                            <MudTabPanel Text="Personal Information">
                                <MudGrid>
                                    <MudItem xs="12" md="6">
                                        <MudTextField Label="Title" @bind-Value="user.Title" ReadOnly="@(!isEditing)" Variant="Variant.Outlined" Class="mb-3" />
                                    </MudItem>
                                    <MudItem xs="12" md="6">
                                        <MudTextField Label="Role" Value="@user.Role" ReadOnly="true" Variant="Variant.Outlined" Class="mb-3" />
                                    </MudItem>
                                    <MudItem xs="12" md="6">
                                        <MudTextField Label="First Name" @bind-Value="user.FirstName" ReadOnly="@(!isEditing)" Variant="Variant.Outlined" Class="mb-3" />
                                    </MudItem>
                                    <MudItem xs="12" md="6">
                                        <MudTextField Label="Last Name" @bind-Value="user.LastName" ReadOnly="@(!isEditing)" Variant="Variant.Outlined" Class="mb-3" />
                                    </MudItem>
                                    <MudItem xs="12">
                                        <MudTextField Label="Email" @bind-Value="user.Email" ReadOnly="@(!isEditing)" Variant="Variant.Outlined" Class="mb-3" />
                                    </MudItem>
                                </MudGrid>
                            </MudTabPanel>
                            
                            <MudTabPanel Text="Employment">
                                @if (userEmployments.Any())
                                {
                                    <MudSimpleTable Hover="true" Striped="true">
                                        <thead>
                                            <tr>
                                                <th>Company</th>
                                                <th>Department</th>
                                                <th>Position</th>
                                                <th>Primary</th>
                                                <th>Since</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var employment in userEmployments)
                                            {
                                                <tr>
                                                    <td>@employment.Company?.Name</td>
                                                    <td>@employment.Department</td>
                                                    <td>@employment.Position</td>
                                                    <td>
                                                        <MudChip T="string" Color="@(employment.IsPrimary ? Color.Success : Color.Default)" Size="Size.Small">
                                                            @(employment.IsPrimary ? "Yes" : "No")
                                                        </MudChip>
                                                    </td>
                                                    <td>@employment.CreatedAt.ToString("MMM dd, yyyy")</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </MudSimpleTable>
                                }
                                else
                                {
                                    <MudAlert Severity="Severity.Info">No employment records found.</MudAlert>
                                }
                            </MudTabPanel>
                            
                            <MudTabPanel Text="Contact Numbers">
                                @if (userPhones.Any())
                                {
                                    <MudSimpleTable Hover="true" Striped="true">
                                        <thead>
                                            <tr>
                                                <th>Country Code</th>
                                                <th>Phone Number</th>
                                                <th>Type</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var phone in userPhones)
                                            {
                                                <tr>
                                                    <td>@phone.CountryCode</td>
                                                    <td>@phone.PhoneNumber</td>
                                                    <td>Primary</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </MudSimpleTable>
                                }
                                else
                                {
                                    <MudAlert Severity="Severity.Info">No phone numbers found.</MudAlert>
                                }
                                @if (isEditing)
                                {
                                    <MudButton Variant="Variant.Outlined" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" Class="mt-3">
                                        Add Phone Number
                                    </MudButton>
                                }
                            </MudTabPanel>
                            
                            <MudTabPanel Text="Activity">
                                <MudGrid>
                                    <MudItem xs="12" md="6">
                                        <MudPaper Class="pa-4" Elevation="0" Style="background-color: var(--mud-palette-background-grey);">
                                            <MudText Typo="Typo.body2">Account Created</MudText>
                                            <MudText Typo="Typo.h6">@user.CreatedAt.ToString("MMM dd, yyyy HH:mm")</MudText>
                                        </MudPaper>
                                    </MudItem>
                                    <MudItem xs="12" md="6">
                                        <MudPaper Class="pa-4" Elevation="0" Style="background-color: var(--mud-palette-background-grey);">
                                            <MudText Typo="Typo.body2">Last Updated</MudText>
                                            <MudText Typo="Typo.h6">@user.UpdatedAt.ToString("MMM dd, yyyy HH:mm")</MudText>
                                        </MudPaper>
                                    </MudItem>
                                </MudGrid>
                            </MudTabPanel>
                        </MudTabs>
                    </MudCardContent>
                    <MudCardActions>
                        @if (isEditing)
                        {
                            <MudButton Variant="Variant.Filled" Color="Color.Success" StartIcon="@Icons.Material.Filled.Save" OnClick="SaveChanges">
                                Save Changes
                            </MudButton>
                            <MudButton Variant="Variant.Outlined" Color="Color.Default" StartIcon="@Icons.Material.Filled.Cancel" OnClick="CancelEdit">
                                Cancel
                            </MudButton>
                        }
                    </MudCardActions>
                </MudCard>
            </MudItem>
        </MudGrid>
    }
    else
    {
        <MudAlert Severity="Severity.Error">User not found.</MudAlert>
    }
</MudContainer>

@code {
    [Parameter]
    public int? UserId { get; set; }
    
    private FoodXUser? user;
    private List<UserEmployment> userEmployments = new();
    private List<UserPhone> userPhones = new();
    private bool isLoading = true;
    private bool isEditing = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadUserData();
    }

    private async Task LoadUserData()
    {
        isLoading = true;
        try
        {
            // If no UserId provided, load current user (mock for now)
            int userIdToLoad = UserId ?? 1; // Default to user 1 for demo
            
            user = await DbContext.FoodXUsers
                .FirstOrDefaultAsync(u => u.Id == userIdToLoad);
            
            if (user != null)
            {
                userEmployments = await DbContext.UserEmployments
                    .Include(e => e.Company)
                    .Where(e => e.UserId == user.Id)
                    .ToListAsync();
                    
                userPhones = await DbContext.UserPhones
                    .Where(p => p.UserId == user.Id)
                    .ToListAsync();
            }
        }
        catch (Exception)
        {
            // Log error
        }
        finally
        {
            isLoading = false;
        }
    }

    private Color GetRoleColor(string role) => role switch
    {
        "Admin" => Color.Error,
        "Buyer" => Color.Info,
        "Seller" => Color.Success,
        "Agent" => Color.Warning,
        _ => Color.Default
    };

    private void EnableEdit()
    {
        isEditing = true;
    }

    private Task SaveChanges()
    {
        // TODO: Implement save logic
        isEditing = false;
        return Task.CompletedTask;
    }

    private void CancelEdit()
    {
        isEditing = false;
    }
}