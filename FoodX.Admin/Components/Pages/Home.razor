@page "/"
@using FoodX.Admin.Data
@using FoodX.Admin.Models
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Authorization
@inject FoodXDbContext DbContext
@attribute [AllowAnonymous]

<PageTitle>FoodX Dashboard</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
    <MudGrid>
        <MudItem xs="12">
            <MudText Typo="Typo.h3" GutterBottom="true">
                <MudIcon Icon="@Icons.Material.Filled.Dashboard" Class="mr-2" Style="vertical-align: middle;" />
                FoodX B2B Trading Dashboard
            </MudText>
            <MudText Typo="Typo.body1" Class="mb-4">Welcome to the Food Exchange Platform - Connecting Buyers and Suppliers</MudText>
        </MudItem>

        <!-- Statistics Cards -->
        <MudItem xs="12" sm="6" md="3">
            <MudCard>
                <MudCardContent>
                    <MudIcon Icon="@Icons.Material.Filled.Business" Color="Color.Primary" Style="font-size: 3rem;" />
                    <MudText Typo="Typo.h4" Class="mt-2">@_companyCount</MudText>
                    <MudText Typo="Typo.body2" Color="Color.Secondary">Total Companies</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudCard>
                <MudCardContent>
                    <MudIcon Icon="@Icons.Material.Filled.People" Color="Color.Success" Style="font-size: 3rem;" />
                    <MudText Typo="Typo.h4" Class="mt-2">@_userCount</MudText>
                    <MudText Typo="Typo.body2" Color="Color.Secondary">Registered Users</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudCard>
                <MudCardContent>
                    <MudIcon Icon="@Icons.Material.Filled.LocalShipping" Color="Color.Warning" Style="font-size: 3rem;" />
                    <MudText Typo="Typo.h4" Class="mt-2">@_supplierCount</MudText>
                    <MudText Typo="Typo.body2" Color="Color.Secondary">Active Suppliers</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudCard>
                <MudCardContent>
                    <MudIcon Icon="@Icons.Material.Filled.ShoppingCart" Color="Color.Info" Style="font-size: 3rem;" />
                    <MudText Typo="Typo.h4" Class="mt-2">@_buyerCount</MudText>
                    <MudText Typo="Typo.body2" Color="Color.Secondary">Active Buyers</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <!-- Quick Actions -->
        <MudItem xs="12">
            <MudPaper Class="pa-4 mt-4">
                <MudText Typo="Typo.h5" GutterBottom="true">Quick Actions</MudText>
                <MudGrid Class="mt-3">
                    <MudItem xs="12" sm="6" md="3">
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Search" FullWidth="true" Href="/companies/search">
                            Find Companies
                        </MudButton>
                    </MudItem>
                    <MudItem xs="12" sm="6" md="3">
                        <MudButton Variant="Variant.Filled" Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Add" FullWidth="true" Href="/Account/Register">
                            Register New User
                        </MudButton>
                    </MudItem>
                    <MudItem xs="12" sm="6" md="3">
                        <MudButton Variant="Variant.Filled" Color="Color.Success" StartIcon="@Icons.Material.Filled.Store" FullWidth="true" Href="/companies/my-company">
                            My Company Profile
                        </MudButton>
                    </MudItem>
                    <MudItem xs="12" sm="6" md="3">
                        <MudButton Variant="Variant.Filled" Color="Color.Info" StartIcon="@Icons.Material.Filled.Category" FullWidth="true" Href="/products">
                            Browse Products
                        </MudButton>
                    </MudItem>
                </MudGrid>
            </MudPaper>
        </MudItem>

        <!-- Recent Companies -->
        <MudItem xs="12" md="6">
            <MudPaper Class="pa-4 mt-4">
                <MudText Typo="Typo.h5" GutterBottom="true">Recent Companies</MudText>
                @if (_recentCompanies.Any())
                {
                    <MudList T="string">
                        @foreach (var company in _recentCompanies)
                        {
                            <MudListItem T="string" Icon="@Icons.Material.Filled.Business">
                                <div class="d-flex justify-space-between align-center">
                                    <div>
                                        <MudText Typo="Typo.body1">@company.Name</MudText>
                                        <MudText Typo="Typo.body2" Color="Color.Secondary">@company.CompanyType - @company.Country</MudText>
                                    </div>
                                    <MudChip T="string" Color="@(company.IsActive ? Color.Success : Color.Default)" Size="Size.Small">
                                        @(company.IsActive ? "Active" : "Inactive")
                                    </MudChip>
                                </div>
                            </MudListItem>
                        }
                    </MudList>
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Secondary">No companies registered yet</MudText>
                }
            </MudPaper>
        </MudItem>

        <!-- Platform Features -->
        <MudItem xs="12" md="6">
            <MudPaper Class="pa-4 mt-4">
                <MudText Typo="Typo.h5" GutterBottom="true">Platform Features</MudText>
                <MudList T="string">
                    <MudListItem T="string" Icon="@Icons.Material.Filled.CheckCircle">
                        <MudText Typo="Typo.body1">Company Registration & Verification</MudText>
                    </MudListItem>
                    <MudListItem T="string" Icon="@Icons.Material.Filled.CheckCircle">
                        <MudText Typo="Typo.body1">B2B Food Trading Marketplace</MudText>
                    </MudListItem>
                    <MudListItem T="string" Icon="@Icons.Material.Filled.CheckCircle">
                        <MudText Typo="Typo.body1">Supplier & Buyer Matching</MudText>
                    </MudListItem>
                    <MudListItem T="string" Icon="@Icons.Material.Filled.CheckCircle">
                        <MudText Typo="Typo.body1">Secure Authentication with Azure AD</MudText>
                    </MudListItem>
                    <MudListItem T="string" Icon="@Icons.Material.Filled.CheckCircle">
                        <MudText Typo="Typo.body1">Real-time Search & Discovery</MudText>
                    </MudListItem>
                </MudList>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private int _companyCount = 0;
    private int _userCount = 0;
    private int _supplierCount = 0;
    private int _buyerCount = 0;
    private List<Company> _recentCompanies = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Get statistics from database
            _companyCount = await DbContext.Companies.CountAsync();
            _userCount = await DbContext.FoodXUsers.CountAsync();
            _supplierCount = await DbContext.Companies.Where(c => c.CompanyType == "Supplier").CountAsync();
            _buyerCount = await DbContext.Companies.Where(c => c.CompanyType == "Buyer").CountAsync();

            // Get recent companies
            _recentCompanies = await DbContext.Companies
                .OrderByDescending(c => c.CreatedAt)
                .Take(5)
                .ToListAsync();
        }
        catch (Exception ex)
        {
            // If database is not accessible, use default values
            Console.WriteLine($"Database error: {ex.Message}");
        }
    }
}