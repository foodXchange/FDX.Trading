@using FoodX.Admin.Models
@using FoodX.Admin.Data
@using Microsoft.EntityFrameworkCore
@using MudBlazor
@inject FoodXDbContext DbContext
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudTextField @bind-Value="firstName" Label="First Name" Required="true" Variant="Variant.Outlined" Class="mb-3" />
        <MudTextField @bind-Value="lastName" Label="Last Name" Required="true" Variant="Variant.Outlined" Class="mb-3" />
        <MudTextField @bind-Value="email" Label="Email" Required="true" Type="InputType.Email" Variant="Variant.Outlined" Class="mb-3" />
        <MudTextField @bind-Value="phoneNumber" Label="Phone Number" Variant="Variant.Outlined" Class="mb-3" />
        <MudTextField @bind-Value="supplierType" Label="Supplier Type" Variant="Variant.Outlined" Class="mb-3" 
                      HelperText="e.g., Manufacturer, Distributor, Wholesaler" />
        <MudSelect @bind-Value="companyId" Label="Company" Variant="Variant.Outlined" Class="mb-3">
            @foreach (var company in companies)
            {
                <MudSelectItem Value="@company.Id">@company.Name</MudSelectItem>
            }
        </MudSelect>
        <MudTextField @bind-Value="address" Label="Address" Variant="Variant.Outlined" Lines="2" Class="mb-3" />
        <MudTextField @bind-Value="city" Label="City" Variant="Variant.Outlined" Class="mb-3" />
        <MudTextField @bind-Value="country" Label="Country" Variant="Variant.Outlined" Class="mb-3" />
        <MudTextField @bind-Value="productCategories" Label="Product Categories" Variant="Variant.Outlined" 
                      HelperText="Comma-separated list (e.g., Fruits, Vegetables, Dairy)" Lines="2" Class="mb-3" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit" Disabled="@isProcessing">
            @if (isProcessing)
            {
                <MudProgressCircular Size="Size.Small" Indeterminate="true" Class="mr-2" />
            }
            Add Supplier
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] 
    private MudDialogInstance? MudDialog { get; set; }
    
    private string firstName = "";
    private string lastName = "";
    private string email = "";
    private string phoneNumber = "";
    private string supplierType = "";
    private int? companyId;
    private string address = "";
    private string city = "";
    private string country = "";
    private string productCategories = "";
    private bool isProcessing = false;
    
    private List<Company> companies = new();
    
    protected override async Task OnInitializedAsync()
    {
        companies = await DbContext.Companies.Where(c => c.IsActive).ToListAsync();
    }
    
    private void Cancel()
    {
        MudDialog.Cancel();
    }
    
    private async Task Submit()
    {
        if (string.IsNullOrWhiteSpace(firstName) || string.IsNullOrWhiteSpace(lastName) || string.IsNullOrWhiteSpace(email))
        {
            Snackbar.Add("Please fill in all required fields", Severity.Warning);
            return;
        }
        
        isProcessing = true;
        
        try
        {
            // Create the user
            var user = new FoodXUser
            {
                FirstName = firstName,
                LastName = lastName,
                Email = email,
                PhoneNumber = phoneNumber,
                Address = address,
                City = city,
                Country = country,
                IsActive = true,
                CreatedAt = DateTime.UtcNow,
                UpdatedAt = DateTime.UtcNow
            };
            
            DbContext.FoodXUsers.Add(user);
            await DbContext.SaveChangesAsync();
            
            // Create the supplier
            var supplier = new Supplier
            {
                UserId = user.Id,
                SupplierType = supplierType,
                CompanyId = companyId,
                ProductCategories = productCategories,
                CreatedAt = DateTime.UtcNow,
                UpdatedAt = DateTime.UtcNow
            };
            
            DbContext.Suppliers.Add(supplier);
            await DbContext.SaveChangesAsync();
            
            Snackbar.Add("Supplier added successfully", Severity.Success);
            MudDialog.Close(DialogResult.Ok(supplier));
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error adding supplier: {ex.Message}", Severity.Error);
        }
        finally
        {
            isProcessing = false;
        }
    }
}